version: "3.9"

services:
  db:
    image: postgres:14-alpine
    container_name: lago-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-lago}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      - POSTGRES_DB=${POSTGRES_DB:-lago}
    volumes:
      - lago_postgres_data:/data/postgres
    ports:
      - "5432:5432"

  redis:
    image: redis:6-alpine
    container_name: lago-redis
    command: --port ${REDIS_PORT:-6379}
    volumes:
      - lago_redis_data:/data
    ports:
      - "6379:6379"

  api:
    image: getlago/api:v1.17.4
    container_name: lago-api
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?search_path=public
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY_BASE=${SECRET_KEY_BASE_IN_COOLIFY:-changeme}
    volumes:
      - lago_storage_data:/app/storage
    ports:
      - "3000:80"
    labels:
      - traefik.enable=true
      - traefik.http.routers.lago-api.rule=Host(`api.example.com`)
      - traefik.http.routers.lago-api.entryPoints=http

  front:
    image: getlago/front:v1.17.4
    container_name: lago-front
    depends_on:
      - api
    environment:
      - API_URL=http://api.example.com
    ports:
      - "25569:80"
    labels:
      - traefik.enable=true
      - traefik.http.routers.lago-front.rule=Host(`example.com`)
      - traefik.http.routers.lago-front.entryPoints=http

volumes:
  lago_postgres_data:
  lago_redis_data:
  lago_storage_data:
